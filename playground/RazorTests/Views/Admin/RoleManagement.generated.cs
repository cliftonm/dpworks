#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RazorTests.Views.Admin
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
	using WebMatrix.Data;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Admin/RoleManagement.cshtml")]
    public partial class RoleManagement : System.Web.Mvc.WebViewPage<dynamic>
    {
        public RoleManagement()
        {
        }
        public override void Execute()
        {
WriteLiteral(" ");

            
            #line 1 "..\..\Views\Admin\RoleManagement.cshtml"
   
  var roleName = "";
  string[] userNames = new string[1];
  string[] roleNames = new string[1];

  // Need to manually query users because Membership.GetAllUsers is not working
  var db = Database.Open("DefaultConnection");
  var selectQueryString = "SELECT UserId, UserName FROM UserProfile";

  if(IsPost)
  {
    // Create new role
    if(!Request["buttonCreateRole"].IsEmpty())
    {
      roleName=Request["textRoleName"];

      if(!Roles.RoleExists(roleName) && !roleName.IsEmpty())
      {
        Roles.CreateRole(roleName);
      }
    } // if(buttonCreateRole)

    // Delete role
    if(!Request["buttonDeleteRole"].IsEmpty())
    {
      roleName=Request["textRoleName"];

      if(Roles.GetUsersInRole(roleName).Length == 0 && !roleName.IsEmpty())
      {
        Roles.DeleteRole(roleName, true); // true means throw if any users are in this role
      }
    } // if(buttonDeleteRole)

    // Add user to role
    if(!Request["buttonAddUserToRole"].IsEmpty())
    {
      userNames[0] = Request["selectUserName"];
      roleNames[0] = Request["selectRoleName"];
      
        if(!Roles.IsUserInRole(userNames[0], roleNames[0]))
        {
        Roles.AddUsersToRoles(userNames, roleNames);
        }
    } // if(buttonAddUserToRole)

    // Delete user from role
    if(!Request["buttonDeleteUserFromRole"].IsEmpty())
    {
      userNames[0] = Request["selectUserName"];
      roleNames[0] = Request["selectRoleName"];

        if(Roles.IsUserInRole(userNames[0], roleNames[0]))
        {
            Roles.RemoveUsersFromRoles(userNames, roleNames);
        }
    } // if(buttonDeleteUseFromRole)
  }

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n\r\n      <h1>Manage Roles</h1>\r\n      <form");

WriteLiteral(" method=\"post\"");

WriteLiteral(">\r\n        <fieldset>\r\n          <label");

WriteLiteral(" for=\"textRoleName\"");

WriteLiteral(">Role name:</label><br/>\r\n          <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" value=\"\"");

WriteLiteral(" name=\"textRoleName\"");

WriteLiteral(" /> &nbsp;\r\n          <input");

WriteLiteral(" type=\"submit\"");

WriteLiteral(" value=\"Create Role\"");

WriteLiteral(" name=\"buttonCreateRole\"");

WriteLiteral(" />\r\n          <input");

WriteLiteral(" type=\"submit\"");

WriteLiteral(" value=\"Delete Role\"");

WriteLiteral(" name=\"buttonDeleteRole\"");

WriteLiteral(" />\r\n        </fieldset>\r\n        \r\n        <p></p>\r\n        \r\n        <fieldset>" +
"\r\n          <label");

WriteLiteral(" for=\"selectUserName\"");

WriteLiteral(">Users:</label>\r\n          <select");

WriteLiteral(" name=\"selectUserName\"");

WriteLiteral(">\r\n");

            
            #line 75 "..\..\Views\Admin\RoleManagement.cshtml"
            
            
            #line default
            #line hidden
            
            #line 75 "..\..\Views\Admin\RoleManagement.cshtml"
             foreach(var row in db.Query(selectQueryString)) {

            
            #line default
            #line hidden
WriteLiteral("              <option>");

            
            #line 76 "..\..\Views\Admin\RoleManagement.cshtml"
                 Write(row.UserName);

            
            #line default
            #line hidden
WriteLiteral("</option>\r\n");

            
            #line 77 "..\..\Views\Admin\RoleManagement.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("          </select>\r\n\r\n          &nbsp;\r\n\r\n          <label");

WriteLiteral(" for=\"selectRoleName\"");

WriteLiteral(">Roles:</label>\r\n          <select");

WriteLiteral(" name=\"selectRoleName\"");

WriteLiteral(">\r\n");

            
            #line 84 "..\..\Views\Admin\RoleManagement.cshtml"
            
            
            #line default
            #line hidden
            
            #line 84 "..\..\Views\Admin\RoleManagement.cshtml"
             foreach(var r in Roles.GetAllRoles())
            {

            
            #line default
            #line hidden
WriteLiteral("              <option>");

            
            #line 86 "..\..\Views\Admin\RoleManagement.cshtml"
                 Write(r);

            
            #line default
            #line hidden
WriteLiteral("</option>\r\n");

            
            #line 87 "..\..\Views\Admin\RoleManagement.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("          </select>\r\n\r\n          &nbsp;\r\n\r\n          <input");

WriteLiteral(" type=\"submit\"");

WriteLiteral(" value=\"Add User to Role\"");

WriteLiteral(" name=\"buttonAddUserToRole\"");

WriteLiteral(" />\r\n          <input");

WriteLiteral(" type=\"submit\"");

WriteLiteral(" value=\"Delete User from Role\"");

WriteLiteral(" name=\"buttonDeleteUserFromRole\"");

WriteLiteral(" />\r\n        </fieldset>\r\n\r\n      <h2>Roles</h2>   \r\n          <ul>\r\n");

            
            #line 98 "..\..\Views\Admin\RoleManagement.cshtml"
          
            
            #line default
            #line hidden
            
            #line 98 "..\..\Views\Admin\RoleManagement.cshtml"
           foreach(var r in Roles.GetAllRoles())
          {

            
            #line default
            #line hidden
WriteLiteral("            <li>");

            
            #line 100 "..\..\Views\Admin\RoleManagement.cshtml"
           Write(r);

            
            #line default
            #line hidden
WriteLiteral("</li>\r\n");

WriteLiteral("            <ul>\r\n");

            
            #line 102 "..\..\Views\Admin\RoleManagement.cshtml"
            
            
            #line default
            #line hidden
            
            #line 102 "..\..\Views\Admin\RoleManagement.cshtml"
             foreach(var u in Roles.GetUsersInRole(r))
            {

            
            #line default
            #line hidden
WriteLiteral("              <li>");

            
            #line 104 "..\..\Views\Admin\RoleManagement.cshtml"
             Write(u);

            
            #line default
            #line hidden
WriteLiteral("</li>\r\n");

            
            #line 105 "..\..\Views\Admin\RoleManagement.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("            </ul>\r\n");

            
            #line 107 "..\..\Views\Admin\RoleManagement.cshtml"
          }

            
            #line default
            #line hidden
WriteLiteral("          </ul>\r\n        <p><a");

WriteAttribute("href", Tuple.Create(" href=\"", 3181), Tuple.Create("\"", 3203)
            
            #line 109 "..\..\Views\Admin\RoleManagement.cshtml"
, Tuple.Create(Tuple.Create("", 3188), Tuple.Create<System.Object, System.Int32>(Href("~/Home")
            
            #line default
            #line hidden
, 3188), false)
);

WriteLiteral(">Return to home page</a></p>\r\n      </form>\r\n");

        }
    }
}
#pragma warning restore 1591
